name: Deploy Full Stack Application

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  # Deploy Backend to Railway
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Railway
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway
      if: ${{ secrets.RAILWAY_TOKEN }}
      uses: railwayapp/railway-deploy@v1.0.0
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_BACKEND_SERVICE }}

  # Deploy Frontend to GitHub Pages
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to GitHub Pages
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.BACKEND_URL }}/api
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/out

  # Alternative: Deploy Frontend to Vercel
  deploy-frontend-vercel:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Vercel
    needs: deploy-backend
    if: ${{ secrets.VERCEL_TOKEN }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'

  # Setup Database (MongoDB Atlas)
  setup-database:
    runs-on: ubuntu-latest
    name: Setup Database
    if: ${{ secrets.MONGODB_URI }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run database migrations
      run: |
        cd backend
        node scripts/migrate.js
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}

  # Run tests
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm run lint
      env:
        NEXT_PUBLIC_API_URL: http://localhost:5000/api
        
    - name: Setup Backend Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run backend tests
      run: |
        cd backend
        npm test || echo "No tests configured"
